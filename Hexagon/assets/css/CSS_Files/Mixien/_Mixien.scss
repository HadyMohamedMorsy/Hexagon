  //640px 1024px 1400px
  $breakepoint-up: ("mid":"720px","lg":"960px","xl":"1139px");

  // 639px 1023px 1399px
  $breakepoint-down: ("xsmall" : "539px" ,"small":"719px","mid":"959px","lg":"1139px");


@mixin breakepoint-up($size) { // for display block desktop
    @media(min-width: map-get($breakepoint-up , $size)){
        @content;
    }
}
@mixin breakepoint-down($size) { // for display block mobile
    @media(max-width: map-get($breakepoint-down , $size)){
        @content;
    }
}


@mixin prefix($property, $value, $prefixes: ()) {
  @each $prefix in $prefixes {
    #{'-' + $prefix + '-' + $property}: $value;
  }
 
  // Output standard non-prefixed declaration
  #{$property}: $value;
}

  @mixin flexCenter {
    @include prefix(display , flex , webkit o ms);
    @include prefix(justify-content , center , webkit o ms);
    @include prefix(align-items , center , webkit o ms);
  }
  @mixin flexCenterColumn {
    @include prefix(display , flex , webkit o ms);
    @include prefix(justify-content , center , webkit o ms);
    @include prefix(align-items , center , webkit o ms);
    @include prefix(flex-direction , column , webkit o ms);
  }
  @mixin spin-animation{
    @include prefix(animation-name , rotate-here , webkit o ms);
    @include prefix(animation-duration , 6s , webkit o ms);
    @include prefix(animation-iteration-count , infinite , webkit o ms);
    @include prefix(animation-timing-function , linear , webkit o ms);
  }

  @mixin top-bottom{
    @include prefix(animation-name , topbottom , webkit o ms);
    @include prefix(animation-duration , 6s , webkit o ms);
    @include prefix(animation-iteration-count , infinite , webkit o ms);
    @include prefix(animation-timing-function , linear , webkit o ms);
  }

  @mixin topbottomspicic{
    @include prefix(animation-name , topbottomspicic , webkit o ms);
    @include prefix(animation-duration , 6s , webkit o ms);
    @include prefix(animation-iteration-count , infinite , webkit o ms);
    @include prefix(animation-timing-function , linear , webkit o ms);
  }

  @mixin left-right{
    @include prefix(animation-name , leftright , webkit o ms);
    @include prefix(animation-duration , 6s , webkit o ms);
    @include prefix(animation-iteration-count , infinite , webkit o ms);
    @include prefix(animation-timing-function , linear , webkit o ms);
  }

  @mixin right-left{
    @include prefix(animation-name , rightleft , webkit o ms);
    @include prefix(animation-duration , 6s , webkit o ms);
    @include prefix(animation-iteration-count , infinite , webkit o ms);
    @include prefix(animation-timing-function , linear , webkit o ms);
  }

  @mixin include-image {
    @include prefix(display , grid , webkit o ms);
    @include prefix(grid-template-columns , 569px auto , webkit o ms);
  }

  @mixin include-image-duo {
    @include prefix(display , grid , webkit o ms);
    @include prefix(grid-template-columns , auto 569px  , webkit o ms);
  }



    // keyframes mixin
    @mixin keyframes($animationName) {
      @-webkit-keyframes #{$animationName} {
          $browser: '-webkit-' !global;
          @content;
      }
      @-moz-keyframes #{$animationName} {
          $browser: '-moz-' !global;
          @content;
      }
      @-o-keyframes #{$animationName} {
          $browser: '-o-' !global;
          @content;
      }
      @keyframes #{$animationName} {
          $browser: '' !global;
          @content;
      }
  } $browser: null;

  @mixin positioncenter {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }



